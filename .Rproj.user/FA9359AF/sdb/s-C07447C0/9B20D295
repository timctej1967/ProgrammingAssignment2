{
    "contents" : "## cachematrix.R\n## this file contains 2 functions\n## the first constructs a special matrix that caches its own inverse\n## it is called like this:\n## \n## myspecialmatrix <- makeCacheMatrix(x) # where x is an invertible matrix\n## cacheSolve(myspecialmatrix)\n\n\n## makeCacheMatrix\n## constructs a vector that contains 4 functions \n## 2 to set and get the input matrix\n## and 2 to setinverse and getinverse\n## this is stored in the global environment\n\nmakeCacheMatrix <- function(x = matrix()) {\n\n    m <- NULL\n    set <- function(y) {\n        x <<- y\n        m <<- NULL\n    }\n    get <- function() x\n    setinverse <- function(solve) m <<- solve\n    getinverse <- function() m\n    \n    ## the following is returned\n    \n    list(set = set, get = get,\n         setinverse = setinverse,\n         getinverse = getinverse)\n    \n}\n\n\n## cacheSolve\n## receives the special matrix constructed by makeCacheMatrix\n## returns the inverse, whether from the cache \n## or if not yet calculated, is calculated then cached and  returned\n\ncacheSolve <- function(x, ...) {\n    \n    ## x is a special matrix constructed by makeCacheMatrix\n    \n    ## call the getinverse function within the special matrix\n    m <- x$getinverse()\n    \n    # check to see if the inverse has  already been calculated\n    if(!is.null(m)) {\n        # in this case it has already been calculated so we can exit\n        message(\"getting cached data\")\n        return(m)\n    }\n    \n    # if we get here we know we do not yet have the inverse\n    # fetch our matrix using the get function within the special matrix\n    data <- x$get()\n    \n    # calculate the inverse using the built-in function\n    m <- solve(data, ...)\n    \n    # call the setinversefunction within the special matrix, thereby  caching the result for next time\n    x$setinverse(m)\n    \n    ## the newly calculated inverse\n    m         \n    \n}\n",
    "created" : 1445422491696.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1966615610",
    "id" : "9B20D295",
    "lastKnownWriteTime" : 1445448593,
    "path" : "C:/Users/tim/Google Drive/training/ProgrammingAssignment2/cachematrix.R",
    "project_path" : "cachematrix.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : true,
    "type" : "r_source"
}